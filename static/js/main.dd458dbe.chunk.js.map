{"version":3,"sources":["components/resultPopup.js","components/resultGrid.js","components/imageComponent.js","components/selectedImageArea.js","contexts/debugMsg.js","components/useTfjs.js","components/imagePairs.js","utils/queryPinterest.js","components/form.js","utils/dataUrlToBlob.js","components/debugMsg.js","config/config.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","backdrop","zIndex","drawer","color","ResultPopUp","props","classes","useState","open","setOpen","src","item","image_square_url","alt","onClick","Backdrop","className","Card","CardMedia","component","image","image_large_url","CardContent","Typography","description","domain","Link","href","link","display","flexWrap","overflow","backgroundColor","palette","background","paper","ImageGridList","data","map","id","width","position","marginLeft","box","img","ImageComponent","useDimensions","ref","dimensions","startX","startY","endX","endY","pos","setPos","bind","useDrag","args","down","movement","movX","movY","offset","initial","initX","initY","x","y","setSearchArgs","Math","min","w","abs","h","setMouseDown","threshold","style","touchAction","sourceImgRef","left","top","e","console","log","flexDirection","SelectedImageArea","DebugMsgContext","React","createContext","useDebugMsg","context","useContext","Error","DebugMsgProvider","debugMsg","setDebugMsg","value","useMemo","Provider","Tfjsontext","Consumer","TfjsProvider","modelName","quantizationBytes","children","tfLoaded","setTfLoaded","model","setModel","modelObj","base","loadModel","useCallback","modelDict","a","deeplab","msg","useEffect","tf","then","memoizedProviderValue","alignItems","gap","ImageDisplay","mouseDown","createRef","imageRenderWidth","document","getElementById","imageRenderHeight","useLayoutEffect","current","imageTensor","browser","fromPixels","xywh","boxes","cropSize","parseInt","croppedTensor","squeeze","cropAndResize","expandDims","toFloat","shape","canvas","scaleRatio","toPixels","toInt","segment","output","legend","segmentationMap","ctx","getContext","segmentationMapData","ImageData","createImageBitmap","imgData","drawImage","err","error","searchHeaders","formData","authority","_boundary","accept","cors","axios","method","url","headers","result","Main","setImage","setXywh","isReadingImg","setIsReadingImg","isSearching","setIsSearching","searchResult","setSearchResult","fileInput","type","name","onChange","fileToUpload","files","fileReader","FileReader","onloadstart","onloadend","onerror","readAsDataURL","FormData","imageBlob","dataurl","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","dataURLtoBlob","append","toString","searchPinterest","resultData","catch","debug","right","DebugMsg","idx","configs","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dd458dbe.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\n\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { Link } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n\t},\r\n\tbackdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n  // expand: {\r\n  //   transform: 'rotate(0deg)',\r\n  //   marginLeft: 'auto',\r\n  //   transition: theme.transitions.create('transform', {\r\n  //     duration: theme.transitions.duration.shortest,\r\n  //   }),\r\n  // },\r\n  // expandOpen: {\r\n  //   transform: 'rotate(180deg)',\r\n  // },\r\n  // avatar: {\r\n  //   backgroundColor: red[500],\r\n  // },\r\n}));\r\n\r\nexport default function ResultPopUp(props){\r\n\tconst classes = useStyles();\r\n\tconst [open, setOpen] = useState(false);\r\n\r\n\tconst handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleToggle = () => {\r\n    setOpen(!open);\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<img src={props.item.image_square_url} alt=\"\" onClick={handleToggle}/>\r\n\t\t\t<Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\r\n\t\t\t\t<Card className={classes.root}>\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tcomponent=\"img\"\r\n\t\t\t\t\t\t// className={classes.media}\r\n\t\t\t\t\t\timage={props.item.image_large_url}\r\n\t\t\t\t\t\t// title=\"Paella dish\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t<Typography>{props.item.description}</Typography>\r\n\t\t\t\t\t\t<Typography>{props.item.domain}</Typography>\r\n\t\t\t\t\t\t<Link href={props.item.link}>{props.item.link}</Link>\r\n\t\t\t\t\t</CardContent>\r\n\t\t\t\t</Card>\r\n\t\t\t</Backdrop>\r\n\t\t</>\r\n\t)\r\n}","import React from 'react';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\n// import GridList from '@material-ui/core/GridList';\r\n// import GridListTile from '@material-ui/core/GridListTile';\r\n\r\nimport ResultPopUp from \"./resultPopup\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    // justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\t// maxWidth: \"80%\",\r\n  },\r\n  // gridList: {\r\n  //   width: 500,\r\n  //   // height: 450,\r\n  // },\r\n}));\r\n\r\n\r\nexport default function ImageGridList(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {/* <GridList cellHeight={160} className={classes.gridList} cols={3}>\r\n        {props.data.map((item) => (\r\n          <GridListTile key={item.id} cols={1}>\r\n            <ResultPopUp item={item}/>\r\n          </GridListTile>\r\n        ))}\r\n      </GridList> */}\r\n\t\t\t{props.data.map((item)=>{\r\n\t\t\t\t\treturn <ResultPopUp item={item} key={item.id}/>\r\n\t\t\t})}\r\n    </div>\r\n  );\r\n}","import React, {useState} from \"react\";\r\nimport { useDrag } from \"react-use-gesture\";\r\nimport useDimensions from \"react-use-dimensions\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\nconst maxWidth = 300;\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n\t\twidth: maxWidth,\r\n\t\tposition: \"relative\",\r\n\t\tbackgroundColor: \"rgb(0,0,0,0.5)\",\t\r\n\t\tmarginLeft:50,\r\n\t},\r\n\tbox: {\r\n\t\tposition: \"absolute\",\r\n\t\tbackgroundColor: \"rgba(0,155,0,0.5)\",\r\n\t},\r\n\timg: {\r\n\t\t\"-webkit-user-drag\": \"none\",\r\n\t\t\"-khtml-user-drag\": \"none\",\r\n\t\t\"-moz-user-drag\": \"none\",\r\n\t\t\"-o-user-drag\": \"none\",\r\n\t\t\"user-drag\": \"none\",\r\n\t\tmaxWidth: maxWidth,\r\n\t}\r\n})\r\n\r\nexport default function ImageComponent(props){\r\n\tconst classes = useStyles();\r\n\r\n\tconst [ref, dimensions] = useDimensions();\r\n\r\n\tconst [pos, setPos] = useState({\r\n\t\t\tstartX: 0,\r\n\t\t\tstartY: 0,\r\n\t\t\tendX: 0,\r\n\t\t\tendY: 0,\r\n\t\t});\r\n\r\n\t\r\n\tconst bind = useDrag(({ args: [dimensions], down, movement: [movX, movY], offset: [offX, offY], initial: [initX, initY] }) => {\r\n\t\t\t// console.log(\"init\", initX, initY);\r\n\t\t\t// console.log(\"mov\", movX, movY);\r\n\t\t\t// console.log(\"off\", offX, offY);\r\n\r\n\t\t\tlet startX = initX - dimensions.x;\r\n\t\t\tlet startY = initY - dimensions.y;\r\n\r\n\t\t\tlet endX = initX - dimensions.x + movX;\r\n\t\t\tlet endY = initY - dimensions.y + movY;\r\n\r\n\t\t\tif (endX < 0){\r\n\t\t\t\tendX = 0;\r\n\t\t\t}\r\n\t\t\telse if (endX > dimensions.width ){\r\n\t\t\t\tendX = dimensions.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (endY < 0){\r\n\t\t\t\tendY = 0;\r\n\t\t\t}\r\n\t\t\telse if (endY > dimensions.height){\r\n\t\t\t\tendY = dimensions.height;\r\n\t\t\t}\r\n\r\n\t\t\tsetPos({\r\n\t\t\t\tstartX: startX,\r\n\t\t\t\tstartY: startY,\r\n\t\t\t\tendX: endX,\r\n\t\t\t\tendY: endY\r\n\t\t\t});\r\n\r\n\t\t\tprops.setSearchArgs({\r\n\t\t\t\tx: Math.min(startX, endX) / dimensions.width,\r\n\t\t\t\ty: Math.min(startY, endY) / dimensions.height,\r\n\t\t\t\tw: Math.abs(startX - endX) / dimensions.width,\r\n\t\t\t\th: Math.abs(startY - endY) / dimensions.height\r\n\t\t\t})\r\n\r\n\t\t\tprops.setMouseDown(down);\r\n\t\t},\r\n\t\t// options\r\n\t\t{ \r\n\t\t\t// delay: 2000, // allowing click for generated div\r\n\t\t\tthreshold: 10,\r\n\t\t\t// bounds: { left: 0, right: dimensions.width, top: 0, bottom: dimensions.height },\r\n\t\t}, \r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={classes.root} ref={ref} {...bind(dimensions)} style={{touchAction: \"none\"}}>\r\n\t\t\t\t<img ref={props.sourceImgRef} id=\"source_image\" className={classes.img} alt=\"Loaded image\" src={props.image}/>\r\n\t\t\t\t{Math.abs(pos.startX - pos.endX) * Math.abs(pos.startY - pos.endY) > 0 ? (<div \r\n\t\t\t\t\tclassName={classes.box} \r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\twidth: Math.abs(pos.startX - pos.endX), \r\n\t\t\t\t\t\theight: Math.abs(pos.startY - pos.endY),\r\n\t\t\t\t\t\tleft: Math.min(pos.startX, pos.endX),\r\n\t\t\t\t\t\ttop: Math.min(pos.startY, pos.endY),\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonClick={e=>console.log(\"clicked\")}\r\n\t\t\t\t/>) : null}\r\n\t\t\t</div>\r\n\t)\t\r\n}\r\n","import React from \"react\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n\t\tposition: \"relative\",\r\n\t\tdisplay: \"flex\",\r\n\t\tflexDirection: \"column\",\r\n\t},\r\n});\r\n\r\nexport default function SelectedImageArea(props){\r\n\tconst classes = useStyles();\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<canvas id=\"selected_portion\" alt=\"Selected portion of image\"/>\r\n\t\t\t<canvas id=\"segmented_portion\" alt=\"Segmented portion of image\"/>\r\n\t\t</div>\r\n\t)\r\n};","import React from \"react\";\r\n\r\nconst DebugMsgContext = React.createContext();\r\n\r\nfunction useDebugMsg() {\r\n  const context = React.useContext(DebugMsgContext);\r\n  if (!context) {\r\n    throw new Error(`useCount must be used within a DebugMsgProvider`)\r\n  }\r\n  return context\r\n}\r\n\r\nfunction DebugMsgProvider(props) {\r\n  const [debugMsg, setDebugMsg] = React.useState([]); // list of strings in message\r\n  const value = React.useMemo(() => [debugMsg, setDebugMsg], [debugMsg])\r\n  return <DebugMsgContext.Provider value={value} {...props} />\r\n}\r\n\r\nexport {DebugMsgProvider, useDebugMsg}","import React, {useState, useEffect, useCallback, useMemo} from \"react\";\r\nimport * as tf from '@tensorflow/tfjs';\r\nimport * as deeplab from '@tfmodels/deeplab';\r\nimport {useDebugMsg} from \"../contexts/debugMsg\";\r\n\r\n// const deeplab = tfmodels.deeplab;\r\n\r\n// Prepare Context\r\nconst Tfjsontext = React.createContext();\r\nconst { Consumer: TfjsConsumer, Provider } = Tfjsontext;\r\n\r\nexport { TfjsConsumer, Tfjsontext };\r\n\r\nexport const TfjsProvider = ({modelName, quantizationBytes=2, children}) => {\r\n\tconst [tfLoaded, setTfLoaded] = useState(false);\r\n\tconst [model, setModel] = useState();\r\n\r\n\tconst [debugMsg, setDebugMsg] = useDebugMsg();\r\n\r\n\t// let modelObj = useMemo((modelUrl) => ({\r\n\t// \tmodelUrl: modelUrl || 'https://tfhub.dev/tensorflow/tfjs-model/deeplab/pascal/1/default/1/model.json?tfjs-format=file',\r\n\t// }),[]);\r\n\tlet modelObj = useMemo(()=> ({\r\n\t\tbase: modelName,\r\n\t\tquantizationBytes: quantizationBytes,\r\n\t}), [modelName, quantizationBytes]);\r\n\r\n\tconst loadModel = useCallback(async (modelDict) => {\r\n\t\ttry {\r\n\t\t\tconst model = await deeplab.load(modelDict);\r\n\t\t\tsetModel(model);\r\n\t\t\tconst msg = \"TF model loaded\";\r\n\t\t\tsetDebugMsg([...debugMsg, msg]);\r\n\t\t\tconsole.log(msg);\r\n\r\n\t\t} \t\t\t\r\n\t\tcatch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}, []);\r\n\r\n\tuseEffect(()=>{\r\n\t\ttf.ready().then(()=>{\r\n\t\t\tsetTfLoaded(true);\r\n\t\t\tloadModel(modelObj);\r\n\t\t});\r\n\t},[modelObj, loadModel]);\r\n\r\n\tconst memoizedProviderValue = useMemo(\r\n    () => ({ tfLoaded, tf: tf, deeplab: deeplab, model: model }),\r\n    [tfLoaded, model]\r\n\t);\r\n\t\r\n\treturn <Provider value={memoizedProviderValue}>{children}</Provider>\r\n}\r\n\r\nexport const useTfjs = () => React.useContext(Tfjsontext);","import React, { useLayoutEffect, useState } from \"react\";\r\n\r\nimport ImageComponent from \"./imageComponent\";\r\nimport SelectedImageArea from \"./selectedImageArea\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\n// import {useOpenCv} from \"opencv-react\";\r\nimport {useTfjs} from \"./useTfjs\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tgap: 10,\r\n\t},\r\n});\r\n\r\n\r\nexport default function ImageDisplay(props){\r\n\tconst classes = useStyles();\r\n\t// const {loaded, cv} = useOpenCv();\r\n\tconst [mouseDown, setMouseDown] = useState(false);\r\n\tconst {tfLoaded, tf, model} = useTfjs();\r\n\r\n\tlet sourceImgRef = React.createRef();\r\n\tconst imageRenderWidth = document?.getElementById(\"source_image\")?.width;\r\n\tconst imageRenderHeight = document?.getElementById(\"source_image\")?.height;\r\n\r\n\t/*// open CV load from image then show to canvas - not using anymore\r\n\tuseLayoutEffect(()=>{\r\n\t\tif (loaded && cv && sourceImgRef.current && imageRenderWidth > 0){\r\n\t\t\t// console.log(\"Loaded in Image Pairs\");\r\n\t\t\t// console.log(sourceImgRef);\r\n\t\t\t// console.log(cv);\r\n\t\t\t// console.log(props.image)\r\n\t\t\ttry{\r\n\t\t\t\tconst cvImage = cv.imread(\"source_image\");\r\n\t\t\t\t// console.log(cvImage);\r\n\t\t\t\t// console.log(\"Loaded Image OK\");\r\n\t\t\t\tconst {width, height} = cvImage.size();\r\n\t\t\t\t// console.log(width, height);\r\n\t\t\t\tconst {x, y, w, h} = props.xywh;\r\n\t\t\t\t// console.log(x, y, w, h);\r\n\t\t\t\tconst rect = new cv.Rect(x*width,\r\n\t\t\t\t\ty*height,\r\n\t\t\t\t\tw*width,\r\n\t\t\t\t\th*height\r\n\t\t\t\t);\r\n\t\t\t\t// console.log(rect);\r\n\t\t\t\tconst selected = cvImage.roi(rect);\r\n\t\t\t\t// console.log(selected);\r\n\t\t\t\tcv.imshow(\"selected_portion\", selected);\r\n\t\t\t\tcvImage.delete();\r\n\t\t\t\tselected.delete();\r\n\t\t\t}\r\n\t\t\tcatch(err){\r\n\t\t\t\t// console.error(err);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [loaded, cv, sourceImgRef, props.xywh,\r\n\t\tprops.image, imageRenderWidth\r\n\t]);\r\n\t//*/\r\n\r\n\t// test tf?\r\n\tuseLayoutEffect(()=>{\r\n\t\tif (tfLoaded && tf && model && \r\n\t\t\tprops.image && sourceImgRef.current && \r\n\t\t\t!mouseDown && //only when mouse is not draging to reduce mouse movement\r\n\t\t\timageRenderWidth > 0){\r\n\r\n\t\t\ttry{\r\n\t\t\t\t// tf.enableDebugMode()\r\n\r\n\t\t\t\t// Crop image base on selection\r\n\t\t\t\tconsole.log(\"sourceImgRef.current:\", sourceImgRef.current);\r\n\t\t\t\tconst imageTensor = tf.browser.fromPixels(sourceImgRef.current); // 3D int32 tensor\r\n\r\n\t\t\t\tconst {x, y, w, h} = props.xywh;\r\n\t\t\t\tconsole.log(\"xywh:\", props.xywh);\r\n\t\t\t\tconst boxes = [[y,x,y+h,x+w]];\r\n\t\t\t\tconst boxInd = [0];\r\n\t\t\t\tconst cropSize = [parseInt(imageRenderHeight*h), parseInt(imageRenderWidth*w)];\r\n\t\t\t\tconsole.log(\"cropSize (h,w):\", cropSize);\r\n\r\n\t\t\t\t// image expand 4D, so unsqueeze at 0\r\n\t\t\t\tconst croppedTensor = tf.squeeze(tf.image.cropAndResize(imageTensor.expandDims(0).toFloat(), boxes, boxInd, cropSize, \"bilinear\"), 0);\r\n\t\t\t\tconsole.log(\"croppedTensor.shape\", croppedTensor.shape);\r\n\t\t\t\tconst canvas = document.getElementById('selected_portion');\r\n\t\t\t\tcanvas.style.width = '100%';\r\n\t\t\t\tcanvas.style.height = '100%';\r\n\t\t\t\tconst scaleRatio = cropSize[0]/imageRenderHeight/2;\r\n\t\t\t\tcanvas.height = scaleRatio*cropSize[0];\r\n\t\t\t\tcanvas.width = scaleRatio*cropSize[1];\r\n\r\n\t\t\t\ttf.browser.toPixels(croppedTensor.toInt(), canvas);\r\n\r\n\t\t\t\t// Image Segmentation\r\n\t\t\t\tmodel.segment(croppedTensor).then( output => {\r\n\t\t\t\t// model.segment(sourceImgRef.current).then( output => {\r\n\t\t\t\t\tconsole.log(\"segment output\", output);\r\n\t\t\t\t\tconst {legend, height, width, segmentationMap} = output;\r\n\t\t\t\t\tconst canvas = document.getElementById('segmented_portion');\r\n\t\t\t\t\tconst ctx = canvas.getContext('2d');\r\n\t\t\t\t\tconst segmentationMapData = new ImageData(segmentationMap, width, height);\r\n\t\t\t\t\tconsole.log(\"segmentationMapData:\", segmentationMapData);\r\n\t\t\t\t\tcanvas.style.width = '100%';\r\n\t\t\t\t\tcanvas.style.height = '100%';\r\n\t\t\t\t\tconst scaleRatio = height/imageRenderHeight/2;\r\n\t\t\t\t\tcanvas.height = scaleRatio*height;\r\n\t\t\t\t\tcanvas.width = scaleRatio*width;\r\n\t\t\t\t\t// ctx.putImageData(segmentationMapData, 0, 0);\r\n\t\t\t\t\tcreateImageBitmap(segmentationMapData).then(imgData => {\r\n\t\t\t\t\t\tctx.drawImage(imgData, 0, 0, width, height, 0, 0, canvas.width, canvas.height);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tcatch(err){\r\n\t\t\t\tconsole.error(err);\r\n\t\t\t}\r\n\t\t}\r\n\t},[tfLoaded, model, props.image, sourceImgRef, mouseDown]);\r\n\t// },[tfLoaded, tf, model, props.image, sourceImgRef, imageRenderWidth]);\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<ImageComponent {...props} sourceImgRef={sourceImgRef} setMouseDown={setMouseDown}/>\r\n\t\t\t{/* {selectedImage ? <SelectedImageArea image={selectedImage} /> : null} */}\r\n\t\t\t<SelectedImageArea />\r\n\t\t</div>\r\n\t)\r\n};","import axios from \"axios\";\r\n\r\nconst searchHeaders = (formData) => {\r\n\treturn {\r\n\t\tauthority: \"api.pinterest.com\",\r\n\t\t\"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`,\r\n\t\t// charset: \"UTF-8\",\r\n\t\taccept: \"*/*\",\r\n\t}\r\n};\r\n\r\nconst cors = \"https://cors-anywhere.herokuapp.com/\";\r\n// const cors = \"\";\r\n\r\nexport default async function searchPinterest(formData){\r\n\tconst result = await axios({\r\n\t\tmethod: \"put\",\r\n\t\turl: `${cors}https://api.pinterest.com/v3/visual_search/extension/image/`,\r\n\t\t// headers: {...searchHeaders(formData), ...formData.getHeaders()},\r\n\t\theaders: searchHeaders(formData),\r\n\t\tdata: formData,\r\n\t})\r\n\t\r\n\treturn result;\r\n};","import React, {useState} from \"react\";\r\n\r\nimport ImageGridList from \"./resultGrid\";\r\nimport ImagePairs from \"./imagePairs\";\r\n\r\nimport searchPinterest from \"../utils/queryPinterest\";\r\nimport dataURLtoBlob from \"../utils/dataUrlToBlob\";\r\n\r\n\r\n\r\nexport default function Main(props){\r\n\tconst [image, setImage] = useState(null); //base64 string content\r\n\tconst [xywh, setXywh] = useState({x: 0, y: 0, w: 1, h: 1});\r\n\tconst [isReadingImg, setIsReadingImg] = useState(false);\r\n\tconst [isSearching, setIsSearching] = useState(false);\r\n\tconst [searchResult, setSearchResult] = useState(null);\r\n\r\n\tconst fileInput = React.createRef();\r\n\r\n\tconst handleLoad = () => {\r\n\t\tconst fileToUpload = fileInput.current.files[0];\r\n\r\n\t\tconst fileReader = new FileReader();\r\n\r\n\t\tfileReader.onloadstart = async () => {\r\n\t\t\t// console.log(fileToUpload);\r\n\t\t\tsetIsReadingImg(true);\r\n\t\t}\r\n\r\n\t\tfileReader.onloadend = async () => {\r\n\t\t\tsetImage(fileReader.result);\r\n\t\t\t// console.log(fileReader.result)\r\n\t\t\tsetIsReadingImg(false);\r\n\t\t}\r\n\t\tfileReader.onerror = function (e) {\r\n\t\t\tconsole.error(e);\r\n\t\t\tsetIsReadingImg(false);\r\n\t\t};\r\n\r\n\t\t// Read content - base 64\r\n\t\tfileReader.readAsDataURL(fileToUpload);\r\n\t};\r\n\r\n\tconst handleSearch = () => {\r\n\t\t// prepare form data\r\n\t\tlet formData = new FormData();\r\n\t\tconst fileToUpload = fileInput.current.files[0];\r\n\t\tconst imageBlob = dataURLtoBlob(image);\r\n\t\tformData.append(\"image\", imageBlob, fileToUpload.name);\r\n\t\t// formData.append(\"x\", \"0\");\r\n\t\t// formData.append(\"y\", \"0\");\r\n\t\t// formData.append(\"w\", \"1.0\");\r\n\t\t// formData.append(\"h\", \"1.0\");\r\n\t\tformData.append(\"x\", xywh.x.toString());\r\n\t\tformData.append(\"y\", xywh.y.toString());\r\n\t\tformData.append(\"w\", xywh.w.toString());\r\n\t\tformData.append(\"h\", xywh.h.toString());\r\n\r\n\t\t// for (let key of formData.entries()) {\r\n\t\t// \tconsole.log(key[0] + ', ' + key[1]);\r\n\t\t// }\r\n\r\n\t\tsetIsSearching(true);\r\n\t\tconst result = searchPinterest(formData);\r\n\t\tresult.then(resultData => {\r\n\t\t\t// console.log(resultData);\r\n\t\t\tsetSearchResult(resultData.data);\r\n\t\t\tsetIsSearching(false);\r\n\t\t}).catch(err => {\r\n\t\t\tsetIsSearching(false);\r\n\t\t});\r\n\r\n\t\t\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input type=\"file\" id=\"myfile\" name=\"myfile\" ref={fileInput} onChange={handleLoad}/>\r\n\t\t\t{isReadingImg ? <div>...Loading</div> : null}\r\n\t\t\t<div>\r\n\t\t\t\t{image ? <div>\r\n\t\t\t\t\t<ImagePairs image={image} xywh={xywh} setSearchArgs={setXywh}/>\t\r\n\t\t\t\t\t{isSearching ? <div>...Searching</div> : <button onClick={handleSearch}>Search</button>}\r\n\t\t\t\t</div> : \r\n\t\t\t\t<div>No image</div>}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div>Results:</div>\r\n\t\t\t\t{searchResult?.data ? <ImageGridList data={searchResult.data} /> : null }\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};","export default function dataURLtoBlob(dataurl) {\r\n\tvar arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n\t\t\tbstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n\twhile(n--){\r\n\t\t\tu8arr[n] = bstr.charCodeAt(n);\r\n\t}\r\n\treturn new Blob([u8arr], {type:mime});\r\n};","import React from \"react\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\nimport {useDebugMsg} from \"../contexts/debugMsg\";\r\n\r\nconst useStyles = makeStyles({\r\n  debug: {\t\t\r\n\t\tposition: \"fixed\",\r\n\t\tbackgroundColor: \"rgb(0,0,255,0.5)\",\t\r\n    top: 0,\r\n    right: 0,\r\n    width: 200,\r\n  },\r\n});\r\n\r\nexport default function DebugMsg(props){\r\n\tconst classes = useStyles();\r\n\tconst [debugMsg] = useDebugMsg();\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.debug}>\r\n\t\t\t{debugMsg.map( (item, idx)=>{\r\n\t\t\t\treturn (<div key={idx}>{item}</div>)\r\n\t\t\t})}\r\n\t\t</div>\r\n\t)\r\n}","export const configs = {\r\n\tVERSION_NUMBER: \"4.5.1\",\r\n\tDEBUG_MODE: true,\r\n};","import React from \"react\";\nimport FormComponent from \"./components/form\";\n\n// import {OpenCvProvider} from \"opencv-react\";\nimport {TfjsProvider} from \"./components/useTfjs\";\n\nimport {DebugMsgProvider} from \"./contexts/debugMsg\";\nimport DebugMsg from \"./components/debugMsg\";\n\nimport {configs} from \"./config/config\";\n\n\nfunction App() {\n  // const [debugMsg, setDebugMsg] = useDebugMsg();\n\n  // const onLoaded = () => {\n  //   const msg = \"OpenCV loaded\"\n  //   setDebugMsg([...debugMsg, msg]);\n  //   console.log(msg);\n  // }\n\n  return (\n    <>\n      <DebugMsgProvider>\n        <TfjsProvider modelName=\"pascal\" quantizationBytes={2}>\n          {/* <OpenCvProvider onLoad={onLoaded} openCvPath={`https://docs.opencv.org/${configs.VERSION_NUMBER}/opencv.js`}> */}\n            <FormComponent/>\n          {/* </OpenCvProvider> */}\n        </TfjsProvider>\n        {configs.DEBUG_MODE ? <DebugMsg/> : null}\n      </DebugMsgProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}