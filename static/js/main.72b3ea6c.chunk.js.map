{"version":3,"sources":["utils/queryPinterest.js","components/form.js","App.js","reportWebVitals.js","index.js"],"names":["searchHeaders","formData","authority","_boundary","accept","searchPinterest","a","axios","method","url","headers","data","result","InputImage","props","useState","image","setImage","isReadingImg","setIsReadingImg","isSearching","setIsSearching","searchResult","setSearchResult","fileInput","React","createRef","type","id","name","ref","onClick","fileToUpload","current","files","fileReader","FileReader","onloadstart","onloadend","onerror","e","console","error","readAsDataURL","alt","src","style","maxWidth","FormData","imageBlob","dataurl","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","Blob","dataURLtoBlob","append","then","resultData","catch","err","map","item","image_square_url","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAEMA,EAAgB,SAACC,GACtB,MAAO,CACNC,UAAW,oBACX,eAAe,iCAAf,OAAiDD,EAASE,WAE1DC,OAAQ,QAOJC,EAAe,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,sEACFC,IAAM,CAC1BC,OAAQ,MACRC,IAAI,GAAD,OALQ,GAKR,+DAEHC,QAASV,EAAcC,GACvBU,KAAMV,IANgB,cACjBW,EADiB,yBAShBA,GATgB,2CAAH,sDCDN,SAASC,EAAWC,GAAO,IAAD,EACdC,mBAAS,MADK,mBACjCC,EADiC,KAC1BC,EAD0B,OAEAF,oBAAS,GAFT,mBAEjCG,EAFiC,KAEnBC,EAFmB,OAGFJ,oBAAS,GAHP,mBAGjCK,EAHiC,KAGpBC,EAHoB,OAIAN,mBAAS,MAJT,mBAIjCO,EAJiC,KAInBC,EAJmB,KAMlCC,EAAYC,IAAMC,YAsDxB,OACC,gCACC,uBAAOC,KAAK,OAAOC,GAAG,SAASC,KAAK,SAASC,IAAKN,IAEhDN,EACC,6CADc,wBAAQa,QAxDR,WAClB,IAAMC,EAAeR,EAAUS,QAAQC,MAAM,GAEvCC,EAAa,IAAIC,WAEvBD,EAAWE,YAAX,sBAAyB,sBAAA/B,EAAA,sDAExBa,GAAgB,GAFQ,2CAKzBgB,EAAWG,UAAX,sBAAuB,sBAAAhC,EAAA,sDACtBW,EAASkB,EAAWvB,QAEpBO,GAAgB,GAHM,2CAKvBgB,EAAWI,QAAU,SAAUC,GAC9BC,QAAQC,MAAMF,GACdrB,GAAgB,IAIjBgB,EAAWQ,cAAcX,IAmCP,kBAGjB,8BACEhB,EAAQ,gCACR,qBAAK4B,IAAI,GAAGC,IAAK7B,EAAO8B,MAAO,CAACC,SAAS,OACxC3B,EAAc,+CAA0B,wBAAQW,QAtChC,WAEpB,IAAI9B,EAAW,IAAI+C,SACbhB,EAAeR,EAAUS,QAAQC,MAAM,GACvCe,EA7CR,SAAuBC,GAGtB,IAFA,IAAIC,EAAMD,EAAQE,MAAM,KAAMC,EAAOF,EAAI,GAAGG,MAAM,WAAW,GAC3DC,EAAOC,KAAKL,EAAI,IAAKM,EAAIF,EAAKG,OAAQC,EAAQ,IAAIC,WAAWH,GACzDA,KACJE,EAAMF,GAAKF,EAAKM,WAAWJ,GAE7B,OAAO,IAAIK,KAAK,CAACH,GAAQ,CAAChC,KAAK0B,IAuCZU,CAAc/C,GAChCf,EAAS+D,OAAO,QAASf,EAAWjB,EAAaH,MACjD5B,EAAS+D,OAAO,IAAK,KACrB/D,EAAS+D,OAAO,IAAK,KACrB/D,EAAS+D,OAAO,IAAK,OACrB/D,EAAS+D,OAAO,IAAK,OAMrB3C,GAAe,GACAhB,EAAgBJ,GACxBgE,MAAK,SAAAC,GAEX3C,EAAgB2C,EAAWvD,MAC3BU,GAAe,MACb8C,OAAM,SAAAC,GACR/C,GAAe,OAgB4B,uBAE1C,6CAED,gCACC,4CACa,OAAZC,QAAY,IAAZA,OAAA,EAAAA,EAAcX,MAAOW,EAAaX,KAAK0D,KAAI,SAAAC,GAC3C,OAAO,qBAAKzB,IAAKyB,EAAKC,sBAErB,WCtFSC,MAJf,WACE,OAAO,cAAC,EAAD,KCSMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.72b3ea6c.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst searchHeaders = (formData) => {\r\n\treturn {\r\n\t\tauthority: \"api.pinterest.com\",\r\n\t\t\"Content-Type\": `multipart/form-data; boundary=${formData._boundary}`,\r\n\t\t// charset: \"UTF-8\",\r\n\t\taccept: \"*/*\",\r\n\t}\r\n};\r\n\r\n// const cors = \"https://cors-anywhere.herokuapp.com/\";\r\nconst cors = \"\";\r\n\r\nconst searchPinterest = async (formData) => {\r\n\tconst result = await axios({\r\n\t\tmethod: \"put\",\r\n\t\turl: `${cors}https://api.pinterest.com/v3/visual_search/extension/image/`,\r\n\t\t// headers: {...searchHeaders(formData), ...formData.getHeaders()},\r\n\t\theaders: searchHeaders(formData),\r\n\t\tdata: formData,\r\n\t})\r\n\t\r\n\treturn result;\r\n};\r\n\r\nexport {searchPinterest};","import React, {useState} from \"react\";\r\n\r\nimport {searchPinterest} from \"../utils/queryPinterest\";\r\n\r\nfunction dataURLtoBlob(dataurl) {\r\n\tvar arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],\r\n\t\t\tbstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);\r\n\twhile(n--){\r\n\t\t\tu8arr[n] = bstr.charCodeAt(n);\r\n\t}\r\n\treturn new Blob([u8arr], {type:mime});\r\n}\r\n\r\nexport default function InputImage(props){\r\n\tconst [image, setImage] = useState(null);\r\n\tconst [isReadingImg, setIsReadingImg] = useState(false);\r\n\tconst [isSearching, setIsSearching] = useState(false);\r\n\tconst [searchResult, setSearchResult] = useState(null);\r\n\r\n\tconst fileInput = React.createRef();\r\n\r\n\tconst handleLoad = () => {\r\n\t\tconst fileToUpload = fileInput.current.files[0];\r\n\r\n\t\tconst fileReader = new FileReader();\r\n\r\n\t\tfileReader.onloadstart = async () => {\r\n\t\t\t// console.log(fileToUpload);\r\n\t\t\tsetIsReadingImg(true);\r\n\t\t}\r\n\r\n\t\tfileReader.onloadend = async () => {\r\n\t\t\tsetImage(fileReader.result);\r\n\t\t\t// console.log(fileReader.result)\r\n\t\t\tsetIsReadingImg(false);\r\n\t\t}\r\n\t\tfileReader.onerror = function (e) {\r\n\t\t\tconsole.error(e);\r\n\t\t\tsetIsReadingImg(false);\r\n\t\t};\r\n\r\n\t\t// Read content - base 64\r\n\t\tfileReader.readAsDataURL(fileToUpload);\r\n\t};\r\n\r\n\tconst handleSearch = () => {\r\n\t\t// prepare form data\r\n\t\tlet formData = new FormData();\r\n\t\tconst fileToUpload = fileInput.current.files[0];\r\n\t\tconst imageBlob = dataURLtoBlob(image);\r\n\t\tformData.append(\"image\", imageBlob, fileToUpload.name);\r\n\t\tformData.append(\"x\", \"0\");\r\n\t\tformData.append(\"y\", \"0\");\r\n\t\tformData.append(\"w\", \"1.0\");\r\n\t\tformData.append(\"h\", \"1.0\");\r\n\r\n\t\t// for (let key of formData.entries()) {\r\n\t\t// \tconsole.log(key[0] + ', ' + key[1]);\r\n\t\t// }\r\n\r\n\t\tsetIsSearching(true);\r\n\t\tconst result = searchPinterest(formData);\r\n\t\tresult.then(resultData => {\r\n\t\t\t// console.log(resultData);\r\n\t\t\tsetSearchResult(resultData.data);\r\n\t\t\tsetIsSearching(false);\r\n\t\t}).catch(err => {\r\n\t\t\tsetIsSearching(false);\r\n\t\t});\r\n\r\n\t\t\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<input type=\"file\" id=\"myfile\" name=\"myfile\" ref={fileInput}/>\r\n\r\n\t\t\t{!isReadingImg ? <button onClick={handleLoad}>Load</button>\r\n\t\t\t : <div>...Loading</div>\r\n\t\t\t}\r\n\t\t\t<div>\r\n\t\t\t\t{image ? <div>\r\n\t\t\t\t\t<img alt=\"\" src={image} style={{maxWidth:300}}/>\r\n\t\t\t\t\t{isSearching ? <div>...Searching</div> : <button onClick={handleSearch}>Search</button>}\r\n\t\t\t\t</div> : \r\n\t\t\t\t<div>No image</div>}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<div>Results:</div>\r\n\t\t\t\t{searchResult?.data ? searchResult.data.map(item => {\r\n\t\t\t\t\treturn <img src={item.image_square_url} />\r\n\t\t\t\t})\r\n\t\t\t\t: null }\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};","import FormComponent from \"./components/form\";\n\nfunction App() {\n  return <FormComponent/>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}